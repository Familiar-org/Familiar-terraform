name: Terraform dev plan

on:
  # 수동 실행 포함
  workflow_dispatch: 
  push:
    # dev branch의 경우에만 push
    branches:
      - "dev"

# defaults:
#   run:
#     working-directory: environment/dev

permissions:
  id-token: write
  contents: read

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    outputs:
      tfplanExitCode: ${{ steps.tf-plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform 
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # assume role을 위한 arn
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: us-east-1 # Required
      - name: Terraform Init
        run: terraform init
        working-directory: environment/dev
      - name: Terraform Format
        run: terraform fmt -check
        working-directory: environment/dev
      - name: Terraform Plan
        id: tf-plan
        working-directory: environment/dev 
        run: |
          export exitcode=0
          terraform plan -input=false -var-file="dev.tfvars" -detailed-exitcode -no-color -out tfplan || export exitcode=$?
          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT
          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else 
            exit 0
          fi